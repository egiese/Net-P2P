import java.io.*;
import java.net.*;

/**
 * Simple client connects sends a sentence periodically and outputs the
 * response. This is an adaption of the code provided by the Computer
 * Networking: A Top Down Approach book by Kurose and Ross
 *
 * @author Chad Williams
 * @additions from Mudassar and Elliot
 */
public class TCPClient extends Thread {

	private int serverPort;
	private String serverIP;
	private String targetFile;
	private String storeLocation;

    public TCPClient(String name, String serverIP, int serverPort, String file, String location) 
    {
    	super(name);
    	this.serverPort = serverPort;
    	this.serverIP = serverIP;
    	this.targetFile = file;
    	this.storeLocation = location;
    }

    
    /*
     * Code to request a file via TCP from a Transient Server (other client)
     * After a query, the user can inputs the file name, host IP, and filepath (from query),
     * and a new thread will begin to attempt to transfer the file
     */
  	public void run() 
  	{
  		Socket clientSocket = null;
  		int filesize=999999999;
  		int bytesRead;
  		int currentTot = 0;

  		// Attempt to open socket with the server and write to it
  		try 
  		{
  			String srvResponse;
  			System.out.println("CLIENT opening socket");
  			clientSocket = new Socket(serverIP, serverPort);
  			System.out.println("CLIENT connected to server");
  			DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());
  			BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
      
  			System.out.println(this.getName() + ": sending '" + targetFile + "'");
  			outToServer.writeBytes(targetFile + '\n');
  			srvResponse = inFromServer.readLine();

  			System.out.println(this.getName() + " received from server: " + srvResponse);     
        
  			// Response of 200 means that file was found on the client
	        if(srvResponse.equals("200 OK"))
	        {
		        System.out.println("Attempting to download file!");
		        
		        // Attempt to transfer the file via byteArray and OutputStreams
		        try
		        {
			        byte [] bytearray = new byte [filesize];
			        InputStream is = clientSocket.getInputStream();
			        FileOutputStream fos = new FileOutputStream(storeLocation);
			        BufferedOutputStream bos = new BufferedOutputStream(fos);
			        bytesRead = is.read(bytearray,0,bytearray.length);
			        currentTot = bytesRead;
			        
			        do 
			        {
			        	bytesRead = is.read(bytearray, currentTot, (bytearray.length-currentTot));
			            if(bytesRead >= 0) currentTot += bytesRead;
			        }
			        while(bytesRead > -1);
			        
			        bos.write(bytearray, 0 , currentTot);
			        bos.flush();
			        bos.close();
			        System.out.println("Download complete!");
		        }
		        catch (Exception e)
		        {
		        	System.out.println("transfer error");
		        	e.printStackTrace();
		        }
	        }
	        
	        // Otherwise, file not found, so return error
	        else if(srvResponse.equals("404 NOT FOUND"))
	        {
	        	System.out.println("File not found - please a different file or host");
	        }

	        clientSocket.close();
	        System.out.println(this.getName() + " closed connection to server");
        }
  		catch (Exception e) 
  		{
  			e.printStackTrace();
  			try 
  			{
  				if (clientSocket != null) 
  				{
  					clientSocket.close();
  				}
  			} 
  			catch (Exception cse) 
  			{
  				// ignore exception here
  			}
  		}
  	}
}
